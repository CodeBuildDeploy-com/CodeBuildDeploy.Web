<!-- ZeroBugs Heading -->
<div class="container content-space-1">
    <div class="row justify-content-lg-between align-items-md-center">
        <div class="col-md-12 mb-0 mb-md-0">
            <h2>Delete all the bugs from your backlog, now!</h2>
            <p class="lead">
                Have you done it? If not go and do it now, I'll wait for you...
            </p>
            <p class="lead">
                ... okay. now doesn't that feel better? You can delete any meetings you may have had around managing all those bugs too. Also any time you've 
                allocated in sprints for addressing them, or if it's got that bad any "bug fix sprints" you may do, is now freed up for productive work. The best 
                part is you've not lost anything.
            </p>
            <h4>Priority Inversion</h4>
            <p>
                Not only have you saved time, you're also now in a position to better utilise your time. Once you've reached the point of allocating time to
                address bugs<small class="text-primary" style="font-size: 0.6em">1</small>, then you have the likelihood of doing lower priority work at the expense of more valuable work. Engineers may be picking trivial
                bugs from the bug backlog to address which deliver little or no business value whilst new functionality that can deliver value is waiting to be
                implemented, or vice versa.
            </p>
            <p>
                How can we get away from this? Well I would say those issues you deleted were not actually bugs.
            </p>
            <h3 class="mb-5">What Is a Bug?</h3>
        </div>
    </div>
</div>
<!-- End ZeroBugs Heading -->

<!-- ZeroBugs Content -->
<div class="container pb-5">
    <div class="row justify-content-center">
        <div class="col-lg-6">
            <figure class="text-end">
                <blockquote class="blockquote">
                    <p>Why are Birds?</p>
                </blockquote>
                <figcaption class="blockquote-footer mt-1">
                    <cite title="Source Title" style="font-size: 0.875em">- Anonymous circa 2015</cite>
                </figcaption>
            </figure>
        </div>
    </div>
</div>
<div class="container pb-5">
    <div class="row justify-content-center">
        <div class="col-lg-12">
            <p>
                It seems that any deviation of the system from some imagined perfect state can be regarded as a bug. Hence the proliferation of "trivial" or "minor"
                bugs, some of which were probably not even worth the expense of creating in your ticketing system. This is entirely subjective too, some people seem
                capable of not seeing a tiny difference in alignment or having their attention immediately distracted by a small typo in the corner of a page
                (sometimes I envy them<small class="text-primary" style="font-size: 0.6em">2</small>).
            </p>
            <p>
                An alternative, and I propose far superior, definition of a bug is unacceptable behaviour. Behaviour that must be changed before any other work is
                started. This is still a subjective bar, but it is a clear and simple decision for the Product Owner to make: Is changing this more important than
                <em>any</em> new functional work? If so, raise a bug, otherwise the current behaviour is acceptable (at least for some period of time). If it does need to be
                changed a Story can be raised to properly prioritise that change.
            </p>
            <p>
                Simple as that; all Bugs must be fixed before any new work can be started.
            </p>
            <p>
                Bugs fall into two categories:
            </p>
            <ul>
                <li>
                    If a bug is serious enough (e.g. it is costing the business money every second until it is addressed) then work on the bug should start immediately
                    interrupting any in progress work.
                </li>
                <li>
                    For all other bugs they should be fixed before picking up any new work.
                </li>
            </ul>
            <h3>Acceptance</h3>
            <p>
                This dovetails nicely with Acceptance Criteria and Product Owner reviews leading to acceptance of a story as a usual part of the Definition of Done. The
                Product Owner determines that what has been implemented is acceptable, that it meets the acceptance criteria. The same process of acceptance applies to
                potential defects (you're not raising bugs against in progress stories, are you?).
            </p>
            <h3>Zero Bugs</h3>
            <p>
                Unsurprisingly this isn't something I've come up with. Searching for something like "zero bugs software" or "zero bugs policy" returns lots of results 
                about this approach (searching for "zero bugs" returns lots of results about pest control).
            </p>
            <p>
                <a href="https://www.xolv.io/blog/articles/zero-bug-software-development/">Zero-Bug Software Development (xolv.io)</a> by Sam Hatoum, probably explains it better than I have.
            </p>
            <h4>Footnotes</h4>
            <ol>
                <li>
                    This is a natural progression. Once you start raising bugs someone is going to start reporting on them. As those numbers grow someone is going to think something needs to 
                    be done about them. Before you know it you're allocating time to this shadowy backlog of bugs instead of the business priorities.
                </li>
                <li>
                    Although after having this proof-read it seems I'm not so good at spotting things.
                </li>
            </ol>
        </div>
    </div>
</div>
<!-- End ZeroBugs Content-->