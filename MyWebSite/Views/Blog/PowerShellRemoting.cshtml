<p>
<p>
    Windows PowerShell remoting gives you complete control over your Windows system remotely similar to the Linux Shell Terminal with SSH.
    This is extreamly useful especial when combined with configuration management tools such as Ansible. By default PowerShell remoting is disabled
    and so it must be enabled and remote machines must be granted access before it can be used.

    <h3>Enabling access</h3>
<p>Using a PowerShell session as Administrator.</p>
<ul>
    <li>Ensure the WinRM service is running</li>
    <ul><li><code>get-service winrm</code></li></ul>
    <li>Run the WinRM service and enable PowerShell remoting</li>
    <ul><li><code>Enable-PSRemoting –force</code></li></ul>
    <li>Enable users for access</li>
    <ul><li><code>winrm s winrm/config/client ''&#64;{TrustedHosts="RemoteComputer"}''</code></li></ul>
    <li>Enable for all remote machines</li>
    <ul><li><code>Set-Item WSMan:\localhost\Client\TrustedHosts *</code></li></ul>
    <li>Restarting the WinRM service</li>
    <ul><li><code>Restart-Service winrm -Force</code></li></ul>
    <li>Checking the status of the WinRM service</li>
    <ul><li><code>winrm quickconfig</code></li></ul>
</ul>

<h3>Running commands</h3>

<p>
    The Invoke-Command cmdlet is used to run a command on a remote machine. The command looks as follows:

    <code>Invoke-Command -ComputerName COMPUTER -ScriptBlock { COMMAND } -credential USERNAME</code>
</p>
    </p>
</p>